package com.iescamp.PROYECTO;

import java.time.LocalDate;
import java.util.Objects;

public class Empleado extends Usuario{
    private boolean tienePrivilegios;
    private Departamento departamento;




    public boolean isTienePrivilegios() {
        return tienePrivilegios;
    }

    public void setTienePrivilegios(boolean tienePrivilegios) {
        this.tienePrivilegios = tienePrivilegios;
    }

    public Departamento getDepartamento() {
        return departamento;
    }

    public void setDepartamento(Departamento departamento) {
        this.departamento = departamento;
    }

    @Override
    public String toString() {
        return "Empleado{" +
                "tienePrivilegios=" + tienePrivilegios +
                ", departamento=" + departamento +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        if (!super.equals(o)) return false;
        Empleado empleado = (Empleado) o;
        return tienePrivilegios == empleado.tienePrivilegios && Objects.equals(departamento, empleado.departamento);
    }

    @Override
    public int hashCode() {
        return Objects.hash(super.hashCode(), tienePrivilegios, departamento);
    }

    public Empleado(String dni, String nombre, String apellidos, String direccion, String telefono, String correoElectronico, LocalDate fechaNacimiento, String pass, boolean activo, boolean tienePrivilegios, Departamento departamento) {
        super(dni, nombre, apellidos, direccion, telefono, correoElectronico, fechaNacimiento, pass, activo);
        this.tienePrivilegios = tienePrivilegios;
        this.departamento = departamento;
    }

  public Empleado buscarPorDNI(String dni){
        for (Empleado e: empleados){
            if (e.getDni().equals(dni)){
                System.out.println("Usuario econtrado con el dni " + e);
                return e;
            }
        }
        return null;
    }

    public Empleado filtrarPorDepartamento(Departamento departamento){
        for (Empleado e: empleados){
            if (e.getDepartamento().equals(departamento)){
                return e;
            }
        }
        return null;
    }

    public Empleado filtrarPorNombreYApellidos(String nombre, String apellidos){
        for (Empleado e: empleados){
            if (e.getNombre().equals(nombre) && e.getApellidos().equals(apellidos)){
                return e;
            }
        }
        return null;
    }

    //filtrar por administradores
//filtrar por administradores
    public Empleado filtraPorAdministrador(Empleado empleado){
        for (Empleado e: empleados){
            if (e.isTienePrivilegios()){
                return e;
            }
        }
        return null;
    }







}
